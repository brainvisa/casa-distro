#!/bin/bash

set -e
set -x

casaconda="$1"

if [ -z "$casaconda" ]; then
    echo "Missing destination directory"
    exit 1
fi

if [ ! -e "$casaconda" ]; then
    mkdir "$casaconda"
fi

system_image="$casaconda/system"
if [ ! -e "$system_image" ]; then
    apptainer build --sandbox --disable-cache "$casaconda/system" docker://ubuntu:22.04
    apptainer run --fakeroot --writable "$system_image" mkdir /conda
    apptainer run --fakeroot --writable "$system_image" apt update
fi

if [ ! -e "$casaconda/Miniforge3-Linux-x86_64.sh" ]; then
    wget -O "$casaconda/Miniforge3-Linux-x86_64.sh" https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh
fi

apptainer="apptainer run -B $casaconda/conda:/conda $system_image"
conda="$apptainer /conda/bin/conda"
if [ ! -e "$casaconda/conda" ]; then
    mkdir "$casaconda/conda"
    cd "$casaconda"
    apptainer run -B "$casaconda/conda:/conda" "$system_image" sh "./Miniforge3-Linux-x86_64.sh" -u -b -p "/conda"
    $conda update conda -y
fi

script_dir=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

cp -a "$script_dir/setup_run_apt" "$casaconda/conda/"
apptainer run --fakeroot --writable -B $casaconda/conda:/conda "$system_image" /conda/setup_run_apt

cp -a "$script_dir/setup_run_conda" "$casaconda/conda/"
$apptainer /conda/setup_run_conda

#
#  Dev environment
#

# Source version control
version_control_packages=(
    git
    git-lfs
    #! git-man
    #! subversion still necessary ?
)

# Configure/build toolchain
toolchain_packages=(
    automake
    clang
    cmake
    #! cmake-curses-gui
    gxx
    gcc
    gfortran
    #! libc-dev
    make
    pkg-config
    #! pyqt5-dev
    #! pyqt5-dev-tools
    #! python3-sip-dev
    #! qtchooser
)

# Development tools and convenience utilities
development_tools=(
    ack-grep
    bash-completion
    emacs-nox
    flake8
    gdb
    gdbserver
    valgrind
    gedit
    git-man
    gitg
    gitk
    kate
    kdiff3
    kompare
    kwrite
    locate
    meld
    nano
    python2  # only for flake8 tests of casa-distro
    python3-autopep8
    python3-objgraph
    python3-venv
    spyder
    strace
    tox
    vim
    xterm
    xdot
)

# Documentation building
documentation_building_packages=(
    doxygen
    ghostscript
    graphviz
    nbconvert #? was jupyter-nbconvert
    pandoc
    sphinx
    sphinx-gallery
    #! texlive-latex-base
    #! texlive-latex-extra  # needed by doxygen to render LaTeX formulas
    #! texlive-fonts-recommended
    wkhtmltopdf
)

brainvisa_standard_dev_dependencies=(
    #! libasound2-dev
    libblitz #? was libblitz0-dev
    boost-cpp #? was libboost-dev
    #! libboost-filesystem-dev
    #! libboost-system-dev
    dcmtk #? was libdcmtk-dev
    libexpat #? was libexpat1-dev
    #! libgl1-mesa-dev
    libglib #? was libglib2.0-dev
    libglu #? was libglu1-mesa-dev
    libjpeg-turbo #? was libjpeg-dev
    #! libminc-dev
    netcdf4 #? was libnetcdf-dev
    #! libomp-dev  # OpenMP with the clang compiler
    #! libopenjp2-7-dev
    libpng #? was libpng-dev
    #! libqt5x11extras5-dev
    #! libqwt-qt5-dev
    libsigcpp #? was libsigc++-2.0-dev
    #! libspnav-dev
    libsvm #? was libsvm-dev
    libtiff #? was libtiff-dev
    #! libvtk9-dev
    #! libvtk9-qt-dev
    libxml2 #? was libxml2-dev
    #! qttools5-dev
    #! qtmultimedia5-dev
    #! qttools5-dev-tools
    #! zlib1g-dev
)

"$conda" install -y ${version_control_packages[@]} ${toolchain_packages[@]} ${documentation_building_packages[@]} ${brainvisa_standard_dev_dependencies[@]}
